# Release pipeline

pr: none
trigger: none

parameters:
 - name: dry_run
    displayName: Dry run mode
    type: boolean
    default: true
 - name: projects # Projects to include within release. (comma/space delimited project names and/or patterns). See
    displayName: Projects to release (defaults to all)
    type: string
    default: ''

variables:
  - name: NX_PARALLEL
    value: 8
  - name: NX_PREFER_TS_NODE
    value: true
  - name: NX_VERBOSE_LOGGING
    value: true
  - name: tags
    value: production,externalfacing
  - group: 'Github and NPM secrets'
  - group: InfoSec-SecurityResults

resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows # We need windows because compliance task only run on windows.
    stages:
      - stage: main
        jobs:
          - job: Release
            pool:
              name: '1ES-Host-Ubuntu'
              image: '1ES-PT-Ubuntu-20.04'
              os: linux
            workspace:
              clean: all
            templateContext:
              outputs:
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/packages
                  artifactName: output
            steps:
              - checkout: self
                persistCredentials: true

              # For multiline scripts, we want the whole task to fail if any line of the script fails.
              # ADO doesn't have bash configured this way by default. To fix we override the SHELLOPTS built-in variable.
              # https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
              # The options below include ADO defaults (braceexpand:hashall:interactive-comments) plus
              # errexit:errtrace for better error behavior.
              - script: |
                  echo "##vso[task.setvariable variable=shellopts]braceexpand:hashall:interactive-comments:errexit:errtrace"
                displayName: Force exit on error (bash)

              - task: NodeTool@0
                inputs:
                  versionSpec: '20.x'
                  checkLatest: true
                displayName: 'Install Node.js'

              - script: yarn install --frozen-lockfile
                displayName: Install dependencies

              - script: |
                  yarn nx run-many -t build,test,lint,type-check -p ${{ parameters.projects }} -nxBail
                displayName: Verify publish Assets

              - script: |
                  git config user.name "Fluent UI Build"
                  git config user.email "fluentui-internal@service.microsoft.com"
                displayName: Authenticate git for pushes

              - script: |
                  yarn nx release --skip-publish -p ${{ parameters.projects }} --dry-run ${{ parameters.dry_run }}
                displayName: Bump versions and generate Changelogs

              #  NOTE: this will not use cache from previous steps as package.json file changed during version bump
              - script: |
                  yarn nx run-many -t build -p ${{ parameters.projects }}
                displayName: Prepare publish Assets

              # TODO: move this to separate job so in case of npm failure we can re-trigger until everything is successfully published
              - script: |
                  yarn nx release publish -p ${{ parameters.projects }} --dry-run ${{ parameters.dry_run }}
                condition: succeeded()
                displayName: Publish to NPM
